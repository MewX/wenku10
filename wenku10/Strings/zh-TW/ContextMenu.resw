<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessTokens.Text" xml:space="preserve">
    <value>權杖</value>
  </data>
  <data name="AutoUpdate.Text" xml:space="preserve">
    <value>自動加載</value>
  </data>
  <data name="Copy.Text" xml:space="preserve">
    <value>複製</value>
  </data>
  <data name="Delete.Text" xml:space="preserve">
    <value>刪除</value>
  </data>
  <data name="DirectView.Text" xml:space="preserve">
    <value>檢視原始檔</value>
  </data>
  <data name="DisAutomation.Text" xml:space="preserve">
    <value>停用自動加載</value>
  </data>
  <data name="Edit.Text" xml:space="preserve">
    <value>編輯</value>
  </data>
  <data name="ImportSpider.Text" xml:space="preserve">
    <value>匯入蜘蛛</value>
  </data>
  <data name="PinToStart.Text" xml:space="preserve">
    <value>釘選到開始畫面</value>
  </data>
  <data name="Reanalyze.Text" xml:space="preserve">
    <value>重新分析</value>
  </data>
  <data name="Rename.Text" xml:space="preserve">
    <value>重新命名</value>
  </data>
  <data name="Search_Dict.Text" xml:space="preserve">
    <value>查字</value>
  </data>
  <data name="SpiderEdit.Text" xml:space="preserve">
    <value>蜘蛛編輯器</value>
  </data>
  <data name="ViewHorz.Text" xml:space="preserve">
    <value>橫向檢視</value>
  </data>
  <data name="WSync.Text" xml:space="preserve">
    <value>同步到文庫</value>
  </data>
  <data name="WUnsync.Text" xml:space="preserve">
    <value>移至本地</value>
  </data>
  <data name="CustomBackground.Text" xml:space="preserve">
    <value>自定義背景</value>
  </data>
  <data name="OpenDirectory.Text" xml:space="preserve">
    <value>開啟目錄</value>
  </data>
  <data name="OpenFromUrl.Text" xml:space="preserve">
    <value>開啟網址</value>
  </data>
  <data name="PresetBackground.Text" xml:space="preserve">
    <value>預設背景</value>
  </data>
  <data name="Register.Text" xml:space="preserve">
    <value>註冊</value>
  </data>
  <data name="SystemBackground.Text" xml:space="preserve">
    <value>系統背景</value>
  </data>
  <data name="ShareScript.Text" xml:space="preserve">
    <value>分享腳本</value>
  </data>
  <data name="AccessTokens.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>用於識別腳本所有權</value>
  </data>
  <data name="PlaceRequest.Text" xml:space="preserve">
    <value>放置請求</value>
  </data>
  <data name="ManageAuths.Text" xml:space="preserve">
    <value>管理 AUTH</value>
  </data>
  <data name="AssignToken.Text" xml:space="preserve">
    <value>設置權杖</value>
  </data>
  <data name="AssignKey.Text" xml:space="preserve">
    <value>設置密鑰</value>
  </data>
  <data name="ResetState.Text" xml:space="preserve">
    <value>重置狀態</value>
  </data>
</root>