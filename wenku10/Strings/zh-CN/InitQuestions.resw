<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Backup.Text" xml:space="preserve">
    <value>备份</value>
  </data>
  <data name="BackupComplete.Text" xml:space="preserve">
    <value>备份完成</value>
  </data>
  <data name="BooksType.Text" xml:space="preserve">
    <value>书籍 - {0} 型</value>
  </data>
  <data name="Complete.Text" xml:space="preserve">
    <value>完成</value>
  </data>
  <data name="CompressCache.Text" xml:space="preserve">
    <value>压缩快取…</value>
  </data>
  <data name="CreatingDatabase.Text" xml:space="preserve">
    <value>创建数据库…</value>
  </data>
  <data name="DataBackup.Text" xml:space="preserve">
    <value>正在备份你的文件…</value>
  </data>
  <data name="EnableOneDrive.Text" xml:space="preserve">
    <value>利用OneDrive 能支援自动同步书架、书签、设定等功能，需要启用OneDrive 吗？</value>
  </data>
  <data name="EnableServerSelector.Text" xml:space="preserve">
    <value>使用分流器可以更快速稳定地载入资讯，需要启用分流器吗？</value>
  </data>
  <data name="ExportBackup.Text" xml:space="preserve">
    <value>汇出备份</value>
  </data>
  <data name="ExtractingFiles.Text" xml:space="preserve">
    <value>提取文件…</value>
  </data>
  <data name="FavRecords.Text" xml:space="preserve">
    <value>收藏记录</value>
  </data>
  <data name="Intro.Text" xml:space="preserve">
    <value>您好，看来这是你第一次启动这个应用。接下来请回答几个问题，以便我为您初始化设定。</value>
  </data>
  <data name="MightTakeAWhile.Text" xml:space="preserve">
    <value>这可能需要一段时间…</value>
  </data>
  <data name="Migrate.Text" xml:space="preserve">
    <value>迁移</value>
  </data>
  <data name="MigrateUserFile.Text" xml:space="preserve">
    <value>使用备份进行迁移</value>
  </data>
  <data name="Migration.Text" xml:space="preserve">
    <value>迁移</value>
  </data>
  <data name="MigrationAborted.Text" xml:space="preserve">
    <value>迁移终止</value>
  </data>
  <data name="MigrationComplete.Text" xml:space="preserve">
    <value>迁移完成</value>
  </data>
  <data name="Next.Text" xml:space="preserve">
    <value>下一步</value>
  </data>
  <data name="NobackupWarning.Text" xml:space="preserve">
    <value>如果您没有备份，一旦迁移失败，数据将会遗失。要忽略这个警告进行迁移吗？</value>
  </data>
  <data name="PleaseMigrate.Text" xml:space="preserve">
    <value>应用这个版本使用之前，需要迁移</value>
  </data>
  <data name="Prev.Text" xml:space="preserve">
    <value>上一步</value>
  </data>
  <data name="PurgingFiles.Text" xml:space="preserve">
    <value>清除文件…</value>
  </data>
  <data name="SavingRecords.Text" xml:space="preserve">
    <value>保存记录</value>
  </data>
  <data name="Thankyou.Text" xml:space="preserve">
    <value>谢谢您，应用需要重新启动，设定将会在您下次启动这个应用时生效，请按完成退出应用。</value>
  </data>
  <data name="Theme.Text" xml:space="preserve">
    <value>请选择预设的主题</value>
  </data>
  <data name="WarnMigrateWithBackup.Text" xml:space="preserve">
    <value>现有数据将被此备份取代。要继续吗？</value>
  </data>
</root>