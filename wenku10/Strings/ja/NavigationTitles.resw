<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Desc_History.Text" xml:space="preserve">
    <value>過去の開いた本を読みます</value>
  </data>
  <data name="Desc_History2.Text" xml:space="preserve">
    <value>何も開いているブックのカタログはまだありません</value>
  </data>
  <data name="Desc_PressList.Text" xml:space="preserve">
    <value>すべての出版社を見ます</value>
  </data>
  <data name="Desc_RecentUpdate.Text" xml:space="preserve">
    <value>最近更新された本</value>
  </data>
  <data name="Desc_TopList_DDigest.Text" xml:space="preserve">
    <value>デイリーヒットランキング</value>
  </data>
  <data name="Desc_TopList_Favourite.Text" xml:space="preserve">
    <value>メンバーのお気に入りでソート</value>
  </data>
  <data name="Desc_TopList_HITs.Text" xml:space="preserve">
    <value>合計ヒットに基づくランキング</value>
  </data>
  <data name="Desc_TopList_WDigest.Text" xml:space="preserve">
    <value>月曜日から始まる週の推奨数、毎週日曜日24：00：00のデータリセットで</value>
  </data>
  <data name="History.Text" xml:space="preserve">
    <value>歴史</value>
  </data>
  <data name="MonthlySuggest.Text" xml:space="preserve">
    <value>毎月のおすすめ</value>
  </data>
  <data name="News.Text" xml:space="preserve">
    <value>掲示板</value>
  </data>
  <data name="PressList.Text" xml:space="preserve">
    <value>文庫</value>
  </data>
  <data name="RankingList.Text" xml:space="preserve">
    <value>ランキング</value>
  </data>
  <data name="SpecialTopics.Text" xml:space="preserve">
    <value>特集</value>
  </data>
  <data name="TopList_DDigest.Text" xml:space="preserve">
    <value>デイリーダーボード</value>
    <comment>dayvisit</comment>
  </data>
  <data name="TopList_Favourite.Text" xml:space="preserve">
    <value>一番好き</value>
    <comment>goodnum</comment>
  </data>
  <data name="TopList_HITs.Text" xml:space="preserve">
    <value>総リーダーボード</value>
    <comment>allvisit</comment>
  </data>
  <data name="TopList_WDigest.Text" xml:space="preserve">
    <value>今週のメンバー推奨リスト</value>
    <comment>weekvote</comment>
  </data>
  <data name="RecentUpdate.Text" xml:space="preserve">
    <value>最近の更新</value>
    <comment>lastupdate</comment>
  </data>
  <data name="Desc_Finished.Text" xml:space="preserve">
    <value>完成した本を見る</value>
  </data>
  <data name="Desc_NewestEntries.Text" xml:space="preserve">
    <value>最新の本を見ます</value>
  </data>
  <data name="Finished.Text" xml:space="preserve">
    <value>終わった本</value>
    <comment>fullflag</comment>
  </data>
  <data name="NewestEntries.Text" xml:space="preserve">
    <value>新刊</value>
    <comment>postdate</comment>
  </data>
  <data name="ManagePins.Text" xml:space="preserve">
    <value>タイルを管理</value>
  </data>
  <data name="Desc_ManagePins.Text" xml:space="preserve">
    <value>固定されたタイルのレコードを表示できます。 「ピンポリシー」（既定値は「何もしない」）は、欠落しているタイルを処理するときに実行するアクションを制御できます。 OneDriveで複数のデバイス間でレコードを表示することもできます。
- 記録を削除する：不足しているタイルを自動的にレコードから削除する
- 自動的に固定する：タイルが欠落している場合、スタートに戻る
- 何をすべきか：何をすべきか尋ねる</value>
  </data>
  <data name="MyLibrary.Text" xml:space="preserve">
    <value>コレクション</value>
  </data>
  <data name="AllRecords.Text" xml:space="preserve">
    <value>すべてのレコード</value>
  </data>
  <data name="Zones.Text" xml:space="preserve">
    <value>領域</value>
  </data>
  <data name="FullTextSearch.Text" xml:space="preserve">
    <value>全文検索</value>
  </data>
  <data name="StaffPicks.Text" xml:space="preserve">
    <value>ハイライト</value>
  </data>
</root>