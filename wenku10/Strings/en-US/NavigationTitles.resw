<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Desc_History.Text" xml:space="preserve">
    <value>Reading history</value>
  </data>
  <data name="Desc_History2.Text" xml:space="preserve">
    <value>You didn't happened to open any book yet</value>
  </data>
  <data name="Desc_News.Text" xml:space="preserve">
    <value>Announcements</value>
  </data>
  <data name="Desc_PressList.Text" xml:space="preserve">
    <value>Publisher list</value>
  </data>
  <data name="Desc_RecentUpdate.Text" xml:space="preserve">
    <value>Recent update</value>
  </data>
  <data name="Desc_TopList_DDigest.Text" xml:space="preserve">
    <value>Number of clicks by day</value>
  </data>
  <data name="Desc_TopList_Favourite.Text" xml:space="preserve">
    <value>Number of favourites by member</value>
  </data>
  <data name="Desc_TopList_HITs.Text" xml:space="preserve">
    <value>Total clicks</value>
  </data>
  <data name="Desc_TopList_WDigest.Text" xml:space="preserve">
    <value>Hit counts restarts at each Monday.</value>
  </data>
  <data name="History.Text" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="MonthlySuggest.Text" xml:space="preserve">
    <value>Monthly digest</value>
  </data>
  <data name="News.Text" xml:space="preserve">
    <value>Announcements</value>
  </data>
  <data name="PressList.Text" xml:space="preserve">
    <value>Press list</value>
  </data>
  <data name="RankingList.Text" xml:space="preserve">
    <value>Rankings</value>
  </data>
  <data name="SpecialTopics.Text" xml:space="preserve">
    <value>Special topics</value>
  </data>
  <data name="TopList_DDigest.Text" xml:space="preserve">
    <value>Daily hits</value>
    <comment>dayvisit</comment>
  </data>
  <data name="TopList_Favourite.Text" xml:space="preserve">
    <value>Total favs</value>
    <comment>goodnum</comment>
  </data>
  <data name="TopList_HITs.Text" xml:space="preserve">
    <value>Top</value>
    <comment>allvisit</comment>
  </data>
  <data name="TopList_WDigest.Text" xml:space="preserve">
    <value>Weekly digest</value>
    <comment>weekvote</comment>
  </data>
  <data name="RecentUpdate.Text" xml:space="preserve">
    <value>Last update</value>
    <comment>lastupdate</comment>
  </data>
  <data name="Desc_Finished.Text" xml:space="preserve">
    <value>Completed series</value>
  </data>
  <data name="Desc_NewestEntries.Text" xml:space="preserve">
    <value>Not the newest entries, but the newest collection</value>
  </data>
  <data name="Finished.Text" xml:space="preserve">
    <value>Finished</value>
    <comment>fullflag</comment>
  </data>
  <data name="NewestEntries.Text" xml:space="preserve">
    <value>New arrivals</value>
    <comment>postdate</comment>
  </data>
  <data name="ManagePins.Text" xml:space="preserve">
    <value>Manage Pinned Tiles</value>
  </data>
  <data name="Desc_ManagePins.Text" xml:space="preserve">
    <value>Can view pinned tile records. The "Pin Policy" ( default is No Action ) can controls what action to take when dealing with missing tiles. You can also enable OneDrive to view records across devices.
- Remove missing tiles: Automatically remove missing tiles from record
- Pin to Start：Pin missing tiles back to Start
- Ask what to do: Ask what to do</value>
  </data>
</root>